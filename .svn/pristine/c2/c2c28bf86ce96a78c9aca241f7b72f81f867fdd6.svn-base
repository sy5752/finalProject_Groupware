package kr.or.ddit.groupware.contoller;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.common.model.PageVo;
import kr.or.ddit.groupware.approval.controller.AppController;
import kr.or.ddit.groupware.approval.model.AppFileVo;
import kr.or.ddit.groupware.model.AttFileVo;
import kr.or.ddit.groupware.model.MsgFileVo;
import kr.or.ddit.groupware.model.MsgVo;
import kr.or.ddit.groupware.service.AttFileService;
import kr.or.ddit.groupware.service.EmpService;
import kr.or.ddit.groupware.service.MsgService;
import kr.or.ddit.groupware.util.FileUtil;


@RequestMapping("msg")
@Controller
public class MsgController {
	
	private static final Logger logger = LoggerFactory.getLogger(MsgController.class);
	
	@Resource(name="msgService")
	private MsgService msgService;
	
	@Resource(name="empService")
	private EmpService empService;
	
	@Resource(name="attFileService")
	private AttFileService attFileService;
	
	@RequestMapping(path="msgMain", method = RequestMethod.GET)
	public String msgMain(int emp_no, Model model) {
		
		model.addAttribute("noReadMsgCnt", msgService.noReadMsgCnt(emp_no));
		
		return "tiles.msg.msgMain";
	}
	
	@RequestMapping(path="sentMsg", method = RequestMethod.GET)
	public String sentMsg() {
		
		return "tiles.msg.sentMsg";
	}
	
	@RequestMapping(path="sentMsg", method = RequestMethod.POST)
	public synchronized String sentMsg(MsgVo msgVo, RedirectAttributes ra , MultipartHttpServletRequest fileList) {
		List<MultipartFile> files = fileList.getFiles("fileName");
		
		
		msgVo.setMsg_sta_cd(702);
		int insertCnt =  0;
		for(int i = 0; i<msgVo.getMsgEmpList().size(); i++) {
			msgVo.setRc_emp_no(msgVo.getMsgEmpList().get(i));
			insertCnt = msgService.sentMsg(msgVo);
			if(insertCnt==1) {
				String filename = "";
				AttFileVo attFileVo = new AttFileVo();
				MsgFileVo msgFileVo = new MsgFileVo();
				msgFileVo.setMsg_no(msgService.maxMsgNo());
				int fileNo = 0;
				if(files!=null) {
					for(MultipartFile file : files) {
						if(!("".equals(file.getOriginalFilename()))) {
							try {
								String uploadPath = "d:" + File.separator + "uploadFile/";
								
								File uploadDir = new File(uploadPath);
								
								if(!uploadDir.exists()) {
									uploadDir.mkdirs();
								}
								String fileExtension = FileUtil.getFileExtension(file.getOriginalFilename());
								String realfilename = uploadPath + UUID.randomUUID().toString()+fileExtension;
								filename = file.getOriginalFilename();
								
								file.transferTo(new File(realfilename));
								
								attFileVo.setFile_nm(filename);
								attFileVo.setFile_route(realfilename);
								attFileVo.setFile_size((int)file.getSize());
								attFileService.registFile(attFileVo);
								fileNo = attFileService.maxFileNo();
								msgFileVo.setFile_no(fileNo);
								msgService.registMsgFile(msgFileVo);
								
							} catch (IllegalStateException | IOException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
						}
					}
				}
				
			}
		}
		
		
		ra.addAttribute("emp_no", msgVo.getSd_emp_no());
		return "redirect:/msg/msgMain";
	}
	
	// 수신자 지정 조직도 불러오기
	@RequestMapping(path="empInfoMsgList", method = RequestMethod.GET)
	public String empInfoMsgList(Model model) {

	    model.addAttribute("deptList", empService.selectDept());

		model.addAttribute("organizationList", empService.selectOrganization());
		
		return "msg/empInfoMsgList";
	}

	
	// 수신자 지정 조직도 불러오기
	@RequestMapping(path="pagingRecMsgAjaxHtml", method = RequestMethod.GET)
	public String pagingRecMsgAjaxHtml(PageVo pageVo,Model model) {

	    model.addAllAttributes(msgService.recMsgList(pageVo));
	    model.addAttribute("msgKind", "받은쪽지");
		return "msg/pagingRecMsgAjaxHtml";
	}
	
}
